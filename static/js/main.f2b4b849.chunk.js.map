{"version":3,"sources":["Components/Header/Header.js","Components/Axios/Axios.js","Components/Cards/Cards.js","Components/SwipeButtons/SwipeButtons.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","IconButton","fontSize","src","alt","instance","Axios","create","baseURL","Cards","useState","people","setPeople","useEffect","a","axios","get","req","data","fetchData","map","person","preventSwipe","onSwipe","dir","nameToDelete","name","console","log","onCardLeftScreen","style","backgroundImage","imgUrl","SwipeButtons","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4TA2BeA,MApBf,WACI,OACI,sBAAKC,UAAU,SAAf,UACI,cAACC,EAAA,EAAD,UACI,cAAC,IAAD,CAAYC,SAAS,QAAQF,UAAU,kBAG3C,qBACIA,UAAU,cACVG,IAAI,2EACJC,IAAI,KAGR,cAACH,EAAA,EAAD,UACI,cAAC,IAAD,CAAWC,SAAU,QAAQF,UAAU,sB,0DCfxCK,E,OAJEC,EAAMC,OAAO,CAC1BC,QAAU,8C,MCmDCC,MAjDf,WACI,MAA2BC,mBAAS,IAApC,mBAAOC,EAAP,KAAcC,EAAd,KAoBA,OAlBAC,qBAAU,WAAM,4CACZ,4BAAAC,EAAA,sEACsBC,EAAMC,IAAI,iBADhC,OACUC,EADV,OAGIL,EAAUK,EAAIC,MAHlB,4CADY,uBAAC,WAAD,wBAMZC,KACF,IAYE,qBAAKnB,UAAU,QAAf,SAEI,qBAAKA,UAAU,iBAAf,SAEIW,EAAOS,KAAI,SAACC,GAAD,OACR,cAAC,IAAD,CACKrB,UAAU,QAEVsB,aAAc,CAAC,KAAK,QACpBC,QAAS,SAACC,GAAD,OAnBFC,EAmBuBJ,EAAOK,UAlBrDC,QAAQC,IAAI,YAAYH,GADb,IAAYA,GAoBPI,iBAAkB,kBAflBH,EAemCL,EAAOK,UAd1DC,QAAQC,IAAIF,EAAO,mBADJ,IAACA,GAUL,SAOI,qBACKI,MAAO,CAAEC,gBAAkB,OAAQV,EAAOW,OAAO,KACjDhC,UAAU,OAFf,SAIK,6BAAKqB,EAAOK,UATXL,EAAOK,c,2FCHrBO,MAtBf,WACI,OACI,sBAAKjC,UAAU,eAAf,UACI,cAACC,EAAA,EAAD,CAAaD,UAAU,aAAvB,SACI,cAAC,IAAD,CAAYE,SAAS,YAEzB,cAACD,EAAA,EAAD,CAAaD,UAAU,YAAvB,SACI,cAAC,IAAD,CAAWE,SAAS,YAExB,cAACD,EAAA,EAAD,CAAaD,UAAU,WAAvB,SACI,cAAC,IAAD,CAAcE,SAAS,YAE3B,cAACD,EAAA,EAAD,CAAaD,UAAU,UAAvB,SACI,cAAC,IAAD,CAAcE,SAAS,YAE3B,cAACD,EAAA,EAAD,CAAaD,UAAU,UAAvB,SACI,cAAC,IAAD,CAAaE,SAAS,gBCTvBgC,MAVf,WACE,OACE,sBAAKlC,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,QCCSmC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.f2b4b849.chunk.js","sourcesContent":["import React from 'react'\r\nimport './Header.css'\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ForumIcon from '@material-ui/icons/Forum';\r\n\r\n\r\nfunction Header() {\r\n    return (\r\n        <div className=\"header\">\r\n            <IconButton>\r\n                <PersonIcon fontSize=\"large\" className=\"header_icon\"/>\r\n            </IconButton>\r\n\r\n            <img \r\n                className=\"header_logo\"\r\n                src=\"https://1000logos.net/wp-content/uploads/2018/07/Tinder-logo-700x394.jpg\"\r\n                alt=\"\"            \r\n            />\r\n\r\n            <IconButton>\r\n                <ForumIcon fontSize= \"large\" className=\"header_icon\"/>\r\n            </IconButton>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header \r\n","import Axios from 'axios';\r\n\r\nconst instance = Axios.create({\r\n    baseURL : \"https://tinder-backend-hami.herokuapp.com\"\r\n});\r\n\r\nexport default instance;","import React, { useEffect, useState } from 'react';\r\nimport TinderCards from 'react-tinder-card';\r\nimport axios from '../Axios/Axios';\r\nimport './Cards.css';\r\n\r\nfunction Cards() {\r\n    const [people,setPeople] = useState([]);\r\n\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            const req = await axios.get('/tinder/cards');\r\n\r\n            setPeople(req.data);\r\n        }\r\n        fetchData();\r\n    },[])\r\n\r\n    const swiped = (direction, nameToDelete) => {\r\n        console.log(\"removing:\"+nameToDelete);\r\n        // setLastDirection(direction)\r\n    }\r\n\r\n    const outOfFrame = (name) =>{\r\n        console.log(name + \"Left the Screen\")\r\n    }\r\n\r\n    return (\r\n        <div className=\"cards\">\r\n\r\n            <div className=\"card_container\">\r\n            {\r\n                people.map((person) =>(\r\n                   <TinderCards\r\n                        className=\"swipe\"\r\n                        key={person.name}\r\n                        preventSwipe={[\"up\",\"down\"]}\r\n                        onSwipe={(dir) => swiped(dir, person.name)}\r\n                        onCardLeftScreen={() => outOfFrame(person.name)}\r\n                   >\r\n                       <div \r\n                            style={{ backgroundImage : \"url(\"+ person.imgUrl+\")\" }}\r\n                            className=\"card\"\r\n                        >\r\n                            <h3>{person.name}</h3>\r\n                       </div>\r\n                    </TinderCards>\r\n                ))\r\n            }\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Cards\r\n","import React from 'react'\r\nimport ReplayIcon from '@material-ui/icons/Replay';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport StarRateIcon from '@material-ui/icons/StarRate';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport FlashOnIcon from '@material-ui/icons/FlashOn';\r\nimport { IconButton } from '@material-ui/core';\r\nimport './SwipeButtons.css';\r\n\r\nfunction SwipeButtons() {\r\n    return (\r\n        <div className=\"swipeButtons\">\r\n            <IconButton  className=\"repeat_btn\">\r\n                <ReplayIcon fontSize=\"large\"/>\r\n            </IconButton>\r\n            <IconButton  className=\"close_btn\">\r\n                <CloseIcon fontSize=\"large\"/>\r\n            </IconButton>\r\n            <IconButton  className=\"star_btn\">\r\n                <StarRateIcon fontSize=\"large\"/>\r\n            </IconButton>\r\n            <IconButton  className=\"fav_btn\">\r\n                <FavoriteIcon fontSize=\"large\"/>\r\n            </IconButton>\r\n            <IconButton  className=\"fav_btn\">\r\n                <FlashOnIcon fontSize=\"large\"/>\r\n            </IconButton>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SwipeButtons\r\n","import React from 'react';\nimport './App.css';\nimport Header from './Components/Header/Header';\nimport Cards from './Components/Cards/Cards';\nimport SwipeButtons from './Components/SwipeButtons/SwipeButtons';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header/> \n      <Cards/>\n      <SwipeButtons/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}